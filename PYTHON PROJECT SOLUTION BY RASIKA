{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "020e658a-204a-4aa7-8fb5-bc889d232f80",
   "metadata": {},
   "outputs": [],
   "source": [
    "TASK 1A\n",
    "eligible_evs = dataframe[(dataframe[\"Minimal price (gross) [PLN]\"] <= 350000) &\n",
    "                  (dataframe[\"Range (WLTP) [km]\"] >= 400)]\n",
    "eligible_evs.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "63bcee7b-56f8-4a5a-82fa-fcc19ba83b3e",
   "metadata": {},
   "outputs": [],
   "source": [
    "Car full name\tMake\tModel\tMinimal price (gross) [PLN]\tEngine power [KM]\tMaximum torque [Nm]\tType of brakes\tDrive type\tBattery capacity [kWh]\tRange (WLTP) [km]\t...\tPermissable gross weight [kg]\tMaximum load capacity [kg]\tNumber of seats\tNumber of doors\tTire size [in]\tMaximum speed [kph]\tBoot capacity (VDA) [l]\tAcceleration 0-100 kph [s]\tMaximum DC charging power [kW]\tmean - Energy consumption [kWh/100 km]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c47a7b1a-b6ff-426f-ab7c-e0c757d4db5f",
   "metadata": {},
   "outputs": [],
   "source": [
    "TASK 1B\n",
    "grouped_by_make = eligible_evs.groupby(\"Make\")\n",
    "grouped_by_make.head()\n",
    "grouped_by_make.size()\n",
    "import matplotlib.pyplot as plt\n",
    "make_counts = grouped_by_make.size()\n",
    "plt.figure(figsize=(8, 8))\n",
    "make_counts.plot(kind='pie', autopct='%1.1f%%', startangle=140, colors=plt.cm.Paired.colors)\n",
    "plt.title('Distribution of Car Manufacturers')\n",
    "plt.axis('equal')\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "03a0f936-189d-414c-a7c0-ed8ee46612ab",
   "metadata": {},
   "outputs": [],
   "source": [
    "TASK 1C\n",
    "avg_battery_capacity = grouped_by_make[\"Battery capacity [kWh]\"].mean()\n",
    "avg_battery_capacity"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "217a126b-dc79-4ed5-9353-f237c93ef9f5",
   "metadata": {},
   "outputs": [],
   "source": [
    "Make\n",
    "Audi             95.000000\n",
    "BMW              80.000000\n",
    "Hyundai          64.000000\n",
    "Kia              64.000000\n",
    "Mercedes-Benz    80.000000\n",
    "Tesla            68.000000\n",
    "Volkswagen       70.666667\n",
    "Name: Battery capacity [kWh], dtype: float64"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9e52a41e-6cb3-4407-89bf-daf8be928224",
   "metadata": {},
   "outputs": [],
   "source": [
    "Insights:\n",
    "\n",
    "Audi leads with the highest average battery capacity:\n",
    "\n",
    "Audi's average battery capacity of 95 kWh suggests that its EVs are designed to offer longer driving ranges, catering to customers looking for\n",
    "high-performance electric vehicles.\n",
    "\n",
    "BMW and Mercedes-Benz:\n",
    "\n",
    "Both BMW and Mercedes-Benz have an average battery capacity of 80 kWh, which indicates these manufacturers prioritize a balance between range and\n",
    "performance. Their EVs are likely to have a good range suitable for most drivers without excessively large batteries that may add unnecessary weight.\n",
    "\n",
    "Hyundai and Kia's lower average battery capacity:\n",
    "\n",
    "Hyundai and Kia have the lowest average battery capacities at 64 kWh. This may suggest that these brands focus on offering more affordable electric \n",
    "vehicles with a range sufficient for urban driving, where shorter distances are typical.\n",
    "\n",
    "Tesla's battery capacity:\n",
    "\n",
    "Tesla's average battery capacity of 68 kWh is relatively moderate, reflecting their focus on a range of EVs that combine performance, affordability,\n",
    "and long driving ranges. Tesla has various models, so the range of battery capacities likely varies, but this average suggests a more balanced offering.\n",
    "\n",
    "Volkswagen's battery capacity:\n",
    "\n",
    "Volkswagen's average battery capacity of 70.67 kWh indicates a middle-ground strategy, likely offering vehicles with an adequate range and competitive \n",
    "pricing, fitting in between the high-end offerings of Audi and BMW and the more affordable models like Hyundai and Kia."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "36711cc9-2c08-469d-8cc4-0e67f53d00b4",
   "metadata": {},
   "outputs": [],
   "source": [
    "TASK 2\n",
    "q1 = dataframe[\"mean - Energy consumption [kWh/100 km]\"].quantile(0.25)\n",
    "q3 = dataframe[\"mean - Energy consumption [kWh/100 km]\"].quantile(0.75)\n",
    "iqr = q3 - q1\n",
    "lower_bound = q1 - 1.5 * iqr\n",
    "upper_bound = q3 + 1.5 * iqr\n",
    "outliers = dataframe[(dataframe[\"mean - Energy consumption [kWh/100 km]\"] < lower_bound) |\n",
    "              (dataframe[\"mean - Energy consumption [kWh/100 km]\"] > upper_bound)]\n",
    "outliers_display = outliers[[\"Car full name\", \"Make\", \"Model\", \"mean - Energy consumption [kWh/100 km]\"]].head()\n",
    "outliers_display"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "24c2b0da-6bfc-4318-9607-53df66152730",
   "metadata": {},
   "outputs": [],
   "source": [
    "Car full name\tMake\tModel\tmean - Energy consumption [kWh/100 km]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c7f0d8d4-c584-4109-a4af-fe6d5e1ceadc",
   "metadata": {},
   "outputs": [],
   "source": [
    "Q1, Q3, and IQR Calculation:\n",
    "\n",
    "Q1 (25th percentile): The value below which 25% of the data lies. It provides insight into the lower distribution of energy consumption.\n",
    "Q3 (75th percentile): The value below which 75% of the data lies, showing the upper distribution of energy consumption.\n",
    "IQR (Interquartile Range): The difference between Q3 and Q1. This range measures the spread of the central 50% of the data, indicating variability in\n",
    "energy consumption values.\n",
    "Outlier Detection:\n",
    "\n",
    "Outliers are determined by identifying data points that lie outside the range of [Q1 - 1.5 * IQR] to [Q3 + 1.5 * IQR]. These values represent unusual\n",
    "or extreme energy consumption patterns that fall far outside the normal distribution.\n",
    "No Outliers Detected:\n",
    "\n",
    "The output shows that there are 0 rows of outliers, meaning no energy consumption values fall outside the expected range defined by the IQR. This could\n",
    "indicate that the dataset is relatively clean and consistent, with energy consumption values falling within a reasonable range for most of the vehicles \n",
    "in the dataset.\n",
    "Key Insights:\n",
    "\n",
    "Energy Consumption Consistency: Since no outliers were detected in the dataset, we can infer that the energy consumption values for the vehicles are\n",
    "within a relatively narrow range. This could suggest that most vehicles have similar energy efficiency, which could be attributed to common technology,\n",
    "vehicle type, or battery size.\n",
    "\n",
    "Data Integrity: The absence of outliers suggests the data is consistent and doesnâ€™t contain extreme values that could skew any analysis. This could be \n",
    "useful when making predictions or building models, as it indicates that the dataset doesn't suffer from any extreme anomalies.\n",
    "\n",
    "Focus on Central Tendency: With no extreme variations in the energy consumption, the focus can now shift to understanding the central tendency (mean,\n",
    "median) and distribution (range, variance) of energy consumption across various vehicle makes and models. This will provide a clearer understanding of \n",
    "the general efficiency levels of the vehicles.\n",
    "\n",
    "Modeling Considerations: The absence of outliers can also be beneficial for any subsequent modeling or analysis, as it reduces the need for data \n",
    "cleaning steps and allows more reliable predictions. The consistency of energy consumption data can help in identifying trends and relationships with\n",
    "other features like battery capacity, range, and engine power."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "22f5294b-7ad3-440f-b15c-5e5c536627e1",
   "metadata": {},
   "outputs": [],
   "source": [
    "TASK 3A\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "plt.figure(figsize=(10, 6))\n",
    "sns.regplot(x=\"Battery capacity [kWh]\", y=\"Range (WLTP) [km]\", data=dataframe, scatter_kws={'color': 'blue'}, line_kws={'color': 'red'})\n",
    "plt.title(\"Relationship Between Battery Capacity and Range\", fontsize=16)\n",
    "plt.xlabel(\"Battery Capacity [kWh]\", fontsize=14)\n",
    "plt.ylabel(\"Range [km]\", fontsize=14)\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e84bb551-17a4-4892-82f6-c621b11e0567",
   "metadata": {},
   "outputs": [],
   "source": [
    "TASK 3B\n",
    "1. Bigger Battery, Longer Range:\n",
    "\n",
    "We saw that cars with bigger batteries generally go further on a single charge. This makes sense, as bigger batteries hold more power.\n",
    "\n",
    "2. Predictable Relationship:\n",
    "\n",
    "There's a clear pattern: as the battery size increases, the driving range also increases in a predictable way.\n",
    "\n",
    "3. Some Exceptions:\n",
    "\n",
    "While most cars follow this pattern, some have either a longer range than expected for their battery size, or a shorter range. These might be special \n",
    "cases, like cars designed for city driving or those with very efficient technology.\n",
    "\n",
    "4. Efficiency Matters:\n",
    "\n",
    "It's not just about the battery size. Some cars can go further on a smaller battery because they are more energy-efficient.\n",
    "\n",
    "5. Helping Buyers Choose:\n",
    "\n",
    "This information can help people decide what kind of battery they need. If you mainly drive short distances, you might not need the biggest battery and \n",
    "can save money."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1cd0b171-4513-4e9a-8f7a-305d9d582b1e",
   "metadata": {},
   "outputs": [],
   "source": [
    "TASK 4\n",
    "import pandas as pd\n",
    "\n",
    "class EVRecommendation:\n",
    "    def __init__(self, dataset):\n",
    "        self.dataset = dataset\n",
    "\n",
    "    def filter_by_criteria(self, budget=None, min_range=None, min_battery_capacity=None):\n",
    "        filtered = self.dataset\n",
    "        if budget:\n",
    "            filtered = filtered[filtered['Minimal price (gross) [PLN]'] <= budget]\n",
    "        if min_range:\n",
    "            filtered = filtered[filtered['Range (WLTP) [km]'] >= min_range]\n",
    "        if min_battery_capacity:\n",
    "            filtered = filtered[filtered['Battery capacity [kWh]'] >= min_battery_capacity]\n",
    "        return filtered\n",
    "\n",
    "    def recommend(self, budget, min_range, min_battery_capacity, top_n=3):\n",
    "        filtered = self.filter_by_criteria(budget, min_range, min_battery_capacity)\n",
    "        filtered = filtered.sort_values(\n",
    "            by=['Range (WLTP) [km]', 'Battery capacity [kWh]'],\n",
    "            ascending=[False, False]\n",
    "        )\n",
    "        return filtered.head(top_n)\n",
    "\n",
    "ev_rec = EVRecommendation(dataframe)\n",
    "budget = 350000\n",
    "min_range = 400\n",
    "min_battery_capacity = 50\n",
    "recommendations = ev_rec.recommend(budget, min_range, min_battery_capacity, top_n=5)\n",
    "print(recommendations)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "49a21ec6-3579-43f4-bd7d-1e7bfa52bc25",
   "metadata": {},
   "outputs": [],
   "source": [
    "                Car full name        Make                Model  \\\n",
    "40   Tesla Model 3 Long Range       Tesla   Model 3 Long Range   \n",
    "41  Tesla Model 3 Performance       Tesla  Model 3 Performance   \n",
    "48      Volkswagen ID.3 Pro S  Volkswagen           ID.3 Pro S   \n",
    "49        Volkswagen ID.4 1st  Volkswagen             ID.4 1st   \n",
    "8                     BMW iX3         BMW                  iX3 \n",
    "\n",
    "   Minimal price (gross) [PLN]  Engine power [KM]  Maximum torque [Nm]  \\\n",
    "40                       235490                372                  510   \n",
    "41                       260490                480                  639   \n",
    "48                       179990                204                  310   \n",
    "49                       202390                204                  310   \n",
    "8                        282900                286                  400\n",
    "\n",
    "                 Type of brakes  Drive type  Battery capacity [kWh]  \\\n",
    "40         disc (front + rear)         4WD                    75.0   \n",
    "41         disc (front + rear)         4WD                    75.0   \n",
    "48  disc (front) + drum (rear)  2WD (rear)                    77.0   \n",
    "49  disc (front) + drum (rear)  2WD (rear)                    77.0   \n",
    "8          disc (front + rear)  2WD (rear)                    80.0  \n",
    "\n",
    "     Range (WLTP) [km]  ...  Permissable gross weight [kg]  \\\n",
    "40                580  ...                            NaN   \n",
    "41                567  ...                            NaN   \n",
    "48                549  ...                         2280.0   \n",
    "49                500  ...                         2660.0   \n",
    "8                 460  ...                         2725.0  \n",
    "\n",
    "    Maximum load capacity [kg]  Number of seats  Number of doors  \\\n",
    "40                         NaN                5                5   \n",
    "41                         NaN                5                5   \n",
    "48                       412.0                5                5   \n",
    "49                       661.0                5                5   \n",
    "8                        540.0                5                5   \n",
    "\n",
    "     Tire size [in]  Maximum speed [kph]  Boot capacity (VDA) [l]  \\\n",
    "40              18                  233                    425.0   \n",
    "41              20                  261                    425.0   \n",
    "48              19                  160                    385.0   \n",
    "49              20                  160                    543.0   \n",
    "8               19                  180                    510.0   \n",
    "\n",
    "    Acceleration 0-100 kph [s]  Maximum DC charging power [kW]  \\\n",
    "40                         4.4                             150   \n",
    "41                         3.3                             150   \n",
    "48                         7.9                             125   \n",
    "49                         8.5                             125   \n",
    "8                          6.8                             150   \n",
    "\n",
    "     mean - Energy consumption [kWh/100 km]  \n",
    "40                                     NaN  \n",
    "41                                     NaN  \n",
    "48                                    15.9  \n",
    "49                                    18.0  \n",
    "8                                     18.8  \n",
    "\n",
    "  [5 rows x 25 columns]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7df768be-212c-4e9c-973b-5e9d86a2a3ae",
   "metadata": {},
   "outputs": [],
   "source": [
    "Key Insights from the EV Recommendations\n",
    "\n",
    "The top three recommended electric vehicles (EVs) are:\n",
    "\n",
    "Tesla Model 3 Long Range: Range of 580 km, battery capacity of 75 kWh, price PLN 235,490. Tesla Model 3 Performance: Range of 567 km, battery capacity\n",
    "of 75 kWh, price PLN 260,490. Volkswagen ID.3 Pro S: Range of 549 km, battery capacity of 77 kWh, price PLN 179,990.\n",
    "\n",
    "Range and Battery Capacity:\n",
    "\n",
    "All three vehicles meet the userâ€™s desired minimum range of 400 km. The Tesla Model 3 Long Range has the highest range (580 km), while the Volkswagen \n",
    "ID.3 Pro S has the largest battery (77 kWh).\n",
    "\n",
    "Price:\n",
    "\n",
    "The Volkswagen ID.3 Pro S is the most affordable at PLN 179,990, while the Tesla Model 3 Performance is the most expensive at PLN 260,490.\n",
    "\n",
    "Drive Type:\n",
    "\n",
    "The Tesla models are 4WD, offering better traction, while the Volkswagen ID.3 Pro S is 2WD (rear)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5e79cde5-482c-4a75-8b5b-323825474a69",
   "metadata": {},
   "outputs": [],
   "source": [
    "TASK 5\n",
    "from scipy.stats import ttest_ind, levene\n",
    "tesla = dataframe[dataframe['Make'] == 'Tesla']['Engine power [KM]']\n",
    "audi = dataframe[dataframe['Make'] == 'Audi']['Engine power [KM]']\n",
    "stat, p_value_levene = levene(tesla, audi)\n",
    "print(f\"Levene's test p-value: {p_value_levene}\")\n",
    "if p_value_levene > 0.05:\n",
    "    equal_var = True\n",
    "else:\n",
    "    equal_var = False\n",
    "t_stat, p_value = ttest_ind(tesla, audi, equal_var=equal_var)\n",
    "print(f\"T-Statistic: {t_stat}, P-Value: {p_value}\")\n",
    "\n",
    "Levene's test p-value: 0.21961763884678553\n",
    "T-Statistic: 1.7024444538261416, P-Value: 0.11672692675082785"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:base] *",
   "language": "python",
   "name": "conda-base-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
